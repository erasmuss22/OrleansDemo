//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#if !EXCLUDE_CODEGEN
#pragma warning disable 162
#pragma warning disable 219
#pragma warning disable 693
#pragma warning disable 1591
#pragma warning disable 1998

namespace OrleansDemo.GrainInterfaces.Grains
{
    using System;
    using System.Net;
    using System.Runtime.Serialization;
    using System.Runtime.Serialization.Formatters.Binary;
    using System.IO;
    using System.Collections.Generic;
    using Orleans;
    using Orleans.Runtime;
    using System.Collections;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class PostalOrderGrainFactory
    {
        

                        public static OrleansDemo.GrainInterfaces.Grains.IPostalOrderGrain GetGrain(System.String primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(OrleansDemo.GrainInterfaces.Grains.IPostalOrderGrain), 548732044, primaryKey));
                        }

                        public static OrleansDemo.GrainInterfaces.Grains.IPostalOrderGrain GetGrain(System.String primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(OrleansDemo.GrainInterfaces.Grains.IPostalOrderGrain), 548732044, primaryKey, grainClassNamePrefix));
                        }

            public static OrleansDemo.GrainInterfaces.Grains.IPostalOrderGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return PostalOrderGrainReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("OrleansDemo.GrainInterfaces.Grains.OrleansDemo.GrainInterfaces.Grains.IPostalOrde" +
            "rGrain")]
        internal class PostalOrderGrainReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, OrleansDemo.GrainInterfaces.Grains.IPostalOrderGrain
        {
            

            public static OrleansDemo.GrainInterfaces.Grains.IPostalOrderGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (OrleansDemo.GrainInterfaces.Grains.IPostalOrderGrain) global::Orleans.Runtime.GrainReference.CastInternal(typeof(OrleansDemo.GrainInterfaces.Grains.IPostalOrderGrain), (global::Orleans.Runtime.GrainReference gr) => { return new PostalOrderGrainReference(gr);}, grainRef, 548732044);
            }
            
            protected internal PostalOrderGrainReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal PostalOrderGrainReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return 548732044;
                }
            }
            
            protected override string InterfaceName
            {
                get
                {
                    return "OrleansDemo.GrainInterfaces.Grains.OrleansDemo.GrainInterfaces.Grains.IPostalOrde" +
                        "rGrain";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                PostalOrderGrainReference input = ((PostalOrderGrainReference)(original));
                return ((PostalOrderGrainReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                PostalOrderGrainReference input = ((PostalOrderGrainReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return PostalOrderGrainReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return ((interfaceId == this.InterfaceId) 
                            || (interfaceId == -1277021679));
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return PostalOrderGrainMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task OrleansDemo.GrainInterfaces.Grains.IPostalOrderGrain.UpdateShippingStatus(string @status, OrleansDemo.GrainInterfaces.Grains.ITruckGrain @truck)
            {

                return base.InvokeMethodAsync<object>(-892319013, new object[] {@status, @truck is global::Orleans.Grain ? OrleansDemo.GrainInterfaces.Grains.TruckGrainFactory.Cast(@truck.AsReference()) : @truck} );
            }
            
            System.Threading.Tasks.Task<string> OrleansDemo.GrainInterfaces.Grains.IPostalOrderGrain.GetCurrentStatus()
            {

                return base.InvokeMethodAsync<System.String>(825167218, new object[] {} );
            }
            
            System.Threading.Tasks.Task<string> OrleansDemo.GrainInterfaces.Grains.IPostalOrderGrain.GetTruckLocation()
            {

                return base.InvokeMethodAsync<System.String>(-389530197, new object[] {} );
            }
            
            System.Threading.Tasks.Task OrleansDemo.GrainInterfaces.Grains.IPostalOrderGrain.CreateOrder(int @cost, string @name)
            {

                return base.InvokeMethodAsync<object>(1142032970, new object[] {@cost, @name} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("OrleansDemo.GrainInterfaces.Grains.OrleansDemo.GrainInterfaces.Grains.IPostalOrde" +
        "rGrain", 548732044)]
    internal class PostalOrderGrainMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return 548732044;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case 548732044:  // IPostalOrderGrain
                        switch (methodId)
                        {
                            case -892319013: 
                                return ((IPostalOrderGrain)grain).UpdateShippingStatus((String)arguments[0], (ITruckGrain)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 825167218: 
                                return ((IPostalOrderGrain)grain).GetCurrentStatus().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -389530197: 
                                return ((IPostalOrderGrain)grain).GetTruckLocation().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 1142032970: 
                                return ((IPostalOrderGrain)grain).CreateOrder((Int32)arguments[0], (String)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }case -1277021679:  // IGrainWithStringKey
                        switch (methodId)
                        {
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case 548732044:  // IPostalOrderGrain
                    switch (methodId)
                    {
                        case -892319013:
                            return "UpdateShippingStatus";
                    case 825167218:
                            return "GetCurrentStatus";
                    case -389530197:
                            return "GetTruckLocation";
                    case 1142032970:
                            return "CreateOrder";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }
                case -1277021679:  // IGrainWithStringKey
                    switch (methodId)
                    {
                        
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class TruckGrainFactory
    {
        

                        public static OrleansDemo.GrainInterfaces.Grains.ITruckGrain GetGrain(System.String primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(OrleansDemo.GrainInterfaces.Grains.ITruckGrain), -644734325, primaryKey));
                        }

                        public static OrleansDemo.GrainInterfaces.Grains.ITruckGrain GetGrain(System.String primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(OrleansDemo.GrainInterfaces.Grains.ITruckGrain), -644734325, primaryKey, grainClassNamePrefix));
                        }

            public static OrleansDemo.GrainInterfaces.Grains.ITruckGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return TruckGrainReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("OrleansDemo.GrainInterfaces.Grains.OrleansDemo.GrainInterfaces.Grains.ITruckGrain" +
            "")]
        internal class TruckGrainReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, OrleansDemo.GrainInterfaces.Grains.ITruckGrain
        {
            

            public static OrleansDemo.GrainInterfaces.Grains.ITruckGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (OrleansDemo.GrainInterfaces.Grains.ITruckGrain) global::Orleans.Runtime.GrainReference.CastInternal(typeof(OrleansDemo.GrainInterfaces.Grains.ITruckGrain), (global::Orleans.Runtime.GrainReference gr) => { return new TruckGrainReference(gr);}, grainRef, -644734325);
            }
            
            protected internal TruckGrainReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal TruckGrainReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return -644734325;
                }
            }
            
            protected override string InterfaceName
            {
                get
                {
                    return "OrleansDemo.GrainInterfaces.Grains.OrleansDemo.GrainInterfaces.Grains.ITruckGrain" +
                        "";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                TruckGrainReference input = ((TruckGrainReference)(original));
                return ((TruckGrainReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                TruckGrainReference input = ((TruckGrainReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return TruckGrainReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return ((interfaceId == this.InterfaceId) 
                            || (interfaceId == -1277021679));
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return TruckGrainMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task OrleansDemo.GrainInterfaces.Grains.ITruckGrain.UpdateCurrentLocation(string @location)
            {

                return base.InvokeMethodAsync<object>(-2066867828, new object[] {@location} );
            }
            
            System.Threading.Tasks.Task<string> OrleansDemo.GrainInterfaces.Grains.ITruckGrain.GetCurrentLocation()
            {

                return base.InvokeMethodAsync<System.String>(1302107453, new object[] {} );
            }
            
            System.Threading.Tasks.Task OrleansDemo.GrainInterfaces.Grains.ITruckGrain.CreatePayload(IEnumerable<String> @orderNumbers)
            {

                return base.InvokeMethodAsync<object>(-880727137, new object[] {@orderNumbers} );
            }
            
            System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<OrleansDemo.GrainInterfaces.Grains.IPostalOrderGrain>> OrleansDemo.GrainInterfaces.Grains.ITruckGrain.GetPostalOrders()
            {

                return base.InvokeMethodAsync<System.Collections.Generic.IEnumerable<OrleansDemo.GrainInterfaces.Grains.IPostalOrderGrain>>(-1576550956, new object[] {} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("OrleansDemo.GrainInterfaces.Grains.OrleansDemo.GrainInterfaces.Grains.ITruckGrain" +
        "", -644734325)]
    internal class TruckGrainMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return -644734325;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case -644734325:  // ITruckGrain
                        switch (methodId)
                        {
                            case -2066867828: 
                                return ((ITruckGrain)grain).UpdateCurrentLocation((String)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1302107453: 
                                return ((ITruckGrain)grain).GetCurrentLocation().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -880727137: 
                                return ((ITruckGrain)grain).CreatePayload((IEnumerable<String>)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -1576550956: 
                                return ((ITruckGrain)grain).GetPostalOrders().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }case -1277021679:  // IGrainWithStringKey
                        switch (methodId)
                        {
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case -644734325:  // ITruckGrain
                    switch (methodId)
                    {
                        case -2066867828:
                            return "UpdateCurrentLocation";
                    case 1302107453:
                            return "GetCurrentLocation";
                    case -880727137:
                            return "CreatePayload";
                    case -1576550956:
                            return "GetPostalOrders";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }
                case -1277021679:  // IGrainWithStringKey
                    switch (methodId)
                    {
                        
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
}
#pragma warning restore 162
#pragma warning restore 219
#pragma warning restore 693
#pragma warning restore 1591
#pragma warning restore 1998
#endif
